<?php

namespace Application\Controllers;
use Phalcon\Http\Response as Response;
use Application\Models\Users;
use Phalcon\Mvc\View;

class UsersController extends ControllerBase {
	public function beforeExecuteRoute($dispatcher)
    {
        parent::beforeExecuteRoute($dispatcher); // TODO: Change the autogenerated stub
    }

   /**
     * The start action, it shows the "search" view
     */
    public function indexAction()
    {
        $users = Users::find(['order' => 'id ASC']);
    	$this->view->users = $users;
    }

    /**
     * Shows the view to "edit" an existing user
     */
    public function editAction()
    {

        $param = $this->dispatcher->getParam('id');
        $user = Users::findFirst($param);
        $this->view->user = $user;

    }

    public function saveAction()
    {
        $this->view->disable();
	    $create = new Users();

	    $create->assign(array(
	    		'name' => $this->request->getPost('name'),
	    		'emailid' => $this->request->getPost('emailId'),
	    		'contactNumber' => $this->request->getPost('contactNumber')
	    	));

	    $action = $create->save();
   		if (! $action) {
			$return = array('return' => false, 'msg' => 'Error ! while saving data');
		} else {
            $this->flash->success('Your information was stored correctly!');
            return $this->response->redirect('/users');
			// $return = array('return' => true);
		}

    }

    public function updateAction()
    {
        $this->view->disable();
        $param = $this->request->getPost("id");
        $user = Users::findFirst($param);
	    $user->id = $param;
        $user->name = $this->request->getPost("name");
        $user->emailid = $this->request->getPost("emailId");
        $user->contactNumber = $this->request->getPost("contactNumber");
        $action = $user->save();
   		if (! $action) {
			$return = array('return' => false, 'msg' => 'Error ! while saving data');
		} else {
            $this->flash->success('Your information was stored correctly!');
            return $this->response->redirect('/users/');
		}

    }

    /**
     * Deletes an existing user
     */
    public function deleteAction()
    {
        $this->view->disable();
        $id = $this->dispatcher->getParam('id');
        $user = Users::findFirst($id);
   		if (! $user->delete()) {
			$return = array('return' => false, 'msg' => 'Error ! while saving data');
		} else {
            $this->flash->success('Your information was stored correctly!');
            return $this->response->redirect('/users/');
		}
    }
}

